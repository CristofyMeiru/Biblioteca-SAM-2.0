/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as publicSignUpRouteImport } from './routes/(public)/sign-up'
import { Route as privateHomeRouteImport } from './routes/(private)/home'
import { Route as publicSignInIndexRouteImport } from './routes/(public)/sign-in/index'

const publicSignUpRoute = publicSignUpRouteImport.update({
  id: '/(public)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const privateHomeRoute = privateHomeRouteImport.update({
  id: '/(private)/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const publicSignInIndexRoute = publicSignInIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicSignInRoute,
} as any)

export interface FileRoutesByFullPath {
  '/home': typeof privateHomeRoute
  '/sign-up': typeof publicSignUpRoute
  '/sign-in/': typeof publicSignInIndexRoute
}
export interface FileRoutesByTo {
  '/home': typeof privateHomeRoute
  '/sign-up': typeof publicSignUpRoute
  '/sign-in': typeof publicSignInIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(private)/home': typeof privateHomeRoute
  '/(public)/sign-up': typeof publicSignUpRoute
  '/(public)/sign-in/': typeof publicSignInIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/home' | '/sign-up' | '/sign-in/'
  fileRoutesByTo: FileRoutesByTo
  to: '/home' | '/sign-up' | '/sign-in'
  id:
    | '__root__'
    | '/(private)/home'
    | '/(public)/sign-up'
    | '/(public)/sign-in/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  privateHomeRoute: typeof privateHomeRoute
  publicSignUpRoute: typeof publicSignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(public)/sign-up': {
      id: '/(public)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof publicSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/home': {
      id: '/(private)/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof privateHomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/sign-in/': {
      id: '/(public)/sign-in/'
      path: '/'
      fullPath: '/sign-in/'
      preLoaderRoute: typeof publicSignInIndexRouteImport
      parentRoute: typeof publicSignInRoute
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  privateHomeRoute: privateHomeRoute,
  publicSignUpRoute: publicSignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
