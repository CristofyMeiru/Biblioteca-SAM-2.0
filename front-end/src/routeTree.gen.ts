/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as privateRouteRouteImport } from './pages/(private)/route'
import { Route as IndexRouteImport } from './pages/index'
import { Route as publicSignUpRouteImport } from './pages/(public)/sign-up'
import { Route as publicSignInIndexRouteImport } from './pages/(public)/sign-in/index'
import { Route as privateDashboardIndexRouteImport } from './pages/(private)/dashboard/index'
import { Route as privateBookLoansIndexRouteImport } from './pages/(private)/book-loans/index'
import { Route as privateBookLoansNewIndexRouteImport } from './pages/(private)/book-loans/new/index'

const privateRouteRoute = privateRouteRouteImport.update({
  id: '/(private)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const publicSignUpRoute = publicSignUpRouteImport.update({
  id: '/(public)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const publicSignInIndexRoute = publicSignInIndexRouteImport.update({
  id: '/(public)/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const privateDashboardIndexRoute = privateDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => privateRouteRoute,
} as any)
const privateBookLoansIndexRoute = privateBookLoansIndexRouteImport.update({
  id: '/book-loans/',
  path: '/book-loans/',
  getParentRoute: () => privateRouteRoute,
} as any)
const privateBookLoansNewIndexRoute =
  privateBookLoansNewIndexRouteImport.update({
    id: '/book-loans/new/',
    path: '/book-loans/new/',
    getParentRoute: () => privateRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof privateRouteRouteWithChildren
  '/sign-up': typeof publicSignUpRoute
  '/book-loans': typeof privateBookLoansIndexRoute
  '/dashboard': typeof privateDashboardIndexRoute
  '/sign-in': typeof publicSignInIndexRoute
  '/book-loans/new': typeof privateBookLoansNewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof privateRouteRouteWithChildren
  '/sign-up': typeof publicSignUpRoute
  '/book-loans': typeof privateBookLoansIndexRoute
  '/dashboard': typeof privateDashboardIndexRoute
  '/sign-in': typeof publicSignInIndexRoute
  '/book-loans/new': typeof privateBookLoansNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(private)': typeof privateRouteRouteWithChildren
  '/(public)/sign-up': typeof publicSignUpRoute
  '/(private)/book-loans/': typeof privateBookLoansIndexRoute
  '/(private)/dashboard/': typeof privateDashboardIndexRoute
  '/(public)/sign-in/': typeof publicSignInIndexRoute
  '/(private)/book-loans/new/': typeof privateBookLoansNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-up'
    | '/book-loans'
    | '/dashboard'
    | '/sign-in'
    | '/book-loans/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-up'
    | '/book-loans'
    | '/dashboard'
    | '/sign-in'
    | '/book-loans/new'
  id:
    | '__root__'
    | '/'
    | '/(private)'
    | '/(public)/sign-up'
    | '/(private)/book-loans/'
    | '/(private)/dashboard/'
    | '/(public)/sign-in/'
    | '/(private)/book-loans/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  privateRouteRoute: typeof privateRouteRouteWithChildren
  publicSignUpRoute: typeof publicSignUpRoute
  publicSignInIndexRoute: typeof publicSignInIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(private)': {
      id: '/(private)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/sign-up': {
      id: '/(public)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof publicSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/sign-in/': {
      id: '/(public)/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof publicSignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/dashboard/': {
      id: '/(private)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof privateDashboardIndexRouteImport
      parentRoute: typeof privateRouteRoute
    }
    '/(private)/book-loans/': {
      id: '/(private)/book-loans/'
      path: '/book-loans'
      fullPath: '/book-loans'
      preLoaderRoute: typeof privateBookLoansIndexRouteImport
      parentRoute: typeof privateRouteRoute
    }
    '/(private)/book-loans/new/': {
      id: '/(private)/book-loans/new/'
      path: '/book-loans/new'
      fullPath: '/book-loans/new'
      preLoaderRoute: typeof privateBookLoansNewIndexRouteImport
      parentRoute: typeof privateRouteRoute
    }
  }
}

interface privateRouteRouteChildren {
  privateBookLoansIndexRoute: typeof privateBookLoansIndexRoute
  privateDashboardIndexRoute: typeof privateDashboardIndexRoute
  privateBookLoansNewIndexRoute: typeof privateBookLoansNewIndexRoute
}

const privateRouteRouteChildren: privateRouteRouteChildren = {
  privateBookLoansIndexRoute: privateBookLoansIndexRoute,
  privateDashboardIndexRoute: privateDashboardIndexRoute,
  privateBookLoansNewIndexRoute: privateBookLoansNewIndexRoute,
}

const privateRouteRouteWithChildren = privateRouteRoute._addFileChildren(
  privateRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  privateRouteRoute: privateRouteRouteWithChildren,
  publicSignUpRoute: publicSignUpRoute,
  publicSignInIndexRoute: publicSignInIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
